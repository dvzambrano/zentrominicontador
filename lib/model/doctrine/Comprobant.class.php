<?php

/**
 * Comprobant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    SGArqBase
 * @subpackage model
 * @author     MSc. Donel Vazquez Zambrano
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Comprobant extends BaseComprobant {

    const CODE_SEPARATOR = "-";

    // param $creationdate = 2018-01-04 17:44:00
    public function getNameInfo($creationdate = false) {
        $array = array();
        if ($creationdate && $creationdate != "") {
            $array = explode(Comprobant::CODE_SEPARATOR, $creationdate);

            $query = Doctrine_Query::create()->from('Comprobant t')
                    ->where('t.name LIKE "' . $array[0] . $array[1] . '%"');

            $comprobant = $query->orderBy('t.id DESC')->fetchOne();
            if ($comprobant && $comprobant->getId() && $comprobant->getId() > 0) {
                $array = explode(Comprobant::CODE_SEPARATOR, $comprobant->getName());
                $array["next"] = $array[1] + 1;
            } else {
                $array[0] = $array[0] . $array[1];
                $array["next"] = 1;
            }
        } else {
            $array = explode(Comprobant::CODE_SEPARATOR, $this->getName());
            $array["next"] = $array[1] + 1;
        }

        return $array;
    }

    public function getBalance($fromdate = false, $todate = false) {
        $balance = 0;

        $q = Doctrine_Query::create()
                ->select('t.credit, t.debit, t.rate, t.comprobantid, t.currencyid, SUM(t.credit) as credittotal, SUM(t.debit) as debittotal')
                ->from('Transaction t')
                ->where('t.comprobantid = ?', array($this->getId()))
                ->groupBy('t.currencyid');
        if ($fromdate || $todate) {
            $q = $q->leftJoin('t.Comprobant c');
            if ($fromdate)
                $q = $q->addWhere('c.creationdate >= ?', $fromdate);
            if ($todate)
                $q = $q->addWhere('c.creationdate <= ?', $todate);
        }

        $results = $q->execute()->toArray();
        foreach ($results as $result)
            $balance += ($result['credittotal'] - $result['debittotal']) / $result['rate'];

        return $balance;
    }

}